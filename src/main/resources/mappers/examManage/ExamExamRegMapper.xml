<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elearning.dao.examManage.ExamExamRegMapper" >
  <resultMap id="BaseResultMap" type="com.elearning.pojo.examManage.ExamExamReg" >
    <constructor >
      <idArg column="ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="examID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="employeeID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="examStatus" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="examApplyReason" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, examID, employeeID, examStatus, examApplyReason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam_examreg
    where ID = #{ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam_examreg
    where ID = #{ID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.elearning.pojo.examManage.ExamExamReg" >
    insert into exam_examreg (ID, examID, employeeID, 
      examStatus, examApplyReason)
    values (#{ID,jdbcType=INTEGER}, #{examID,jdbcType=INTEGER}, #{employeeID,jdbcType=INTEGER}, 
      #{examStatus,jdbcType=INTEGER}, #{examApplyReason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.elearning.pojo.examManage.ExamExamReg" >
    insert into exam_examreg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ID != null" >
        ID,
      </if>
      <if test="examID != null" >
        examID,
      </if>
      <if test="employeeID != null" >
        employeeID,
      </if>
      <if test="examStatus != null" >
        examStatus,
      </if>
      <if test="examApplyReason != null" >
        examApplyReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ID != null" >
        #{ID,jdbcType=INTEGER},
      </if>
      <if test="examID != null" >
        #{examID,jdbcType=INTEGER},
      </if>
      <if test="employeeID != null" >
        #{employeeID,jdbcType=INTEGER},
      </if>
      <if test="examStatus != null" >
        #{examStatus,jdbcType=INTEGER},
      </if>
      <if test="examApplyReason != null" >
        #{examApplyReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elearning.pojo.examManage.ExamExamReg" >
    update exam_examreg
    <set >
      <if test="examID != null" >
        examID = #{examID,jdbcType=INTEGER},
      </if>
      <if test="employeeID != null" >
        employeeID = #{employeeID,jdbcType=INTEGER},
      </if>
      <if test="examStatus != null" >
        examStatus = #{examStatus,jdbcType=INTEGER},
      </if>
      <if test="examApplyReason != null" >
        examApplyReason = #{examApplyReason,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elearning.pojo.examManage.ExamExamReg" >
    update exam_examreg
    set examID = #{examID,jdbcType=INTEGER},
      employeeID = #{employeeID,jdbcType=INTEGER},
      examStatus = #{examStatus,jdbcType=INTEGER},
      examApplyReason = #{examApplyReason,jdbcType=VARCHAR}
    where ID = #{ID,jdbcType=INTEGER}
  </update>

  <select id="findByUserIdAndExamStatus" resultMap="BaseResultMap" parameterType="map">
    SELECT <include refid="Base_Column_List"/>  from exam_examreg
    WHERE employeeID = #{employeeID,jdbcType=INTEGER} and examStatus = #{examStatus,jdbcType=INTEGER}
  </select>

  <select id="getListByExamIdAndExamStatus" resultType="com.elearning.pojo.examManage.ExamExamReg" parameterType="map">
    SELECT <include refid="Base_Column_List"/>  from exam_examreg
    WHERE examID = #{examID,jdbcType=INTEGER} and examStatus = #{examStatus,jdbcType=INTEGER}
  </select>


</mapper>