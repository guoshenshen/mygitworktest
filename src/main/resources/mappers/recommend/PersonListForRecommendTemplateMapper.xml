<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elearning.dao.recommend.PersonListForRecommendTemplateMapper" >
  <resultMap id="BaseResultMap" type="com.elearning.pojo.recommend.PersonListForRecommendTemplate" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="adminOperatorId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="adminOrgId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="memberId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="memberType" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="recommendMailId" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, adminOperatorId, adminOrgId, memberId, memberType, recommendMailId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from personlistforrecommendtemplate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from personlistforrecommendtemplate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.elearning.pojo.recommend.PersonListForRecommendTemplate" >
    insert into personlistforrecommendtemplate (id, adminOperatorId, adminOrgId, 
      memberId, memberType, recommendMailId
      )
    values (#{id,jdbcType=INTEGER}, #{adminOperatorId,jdbcType=INTEGER}, #{adminOrgId,jdbcType=INTEGER}, 
      #{memberId,jdbcType=INTEGER}, #{memberType,jdbcType=INTEGER}, #{recommendMailId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.elearning.pojo.recommend.PersonListForRecommendTemplate" >
    insert into personlistforrecommendtemplate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="adminOperatorId != null" >
        adminOperatorId,
      </if>
      <if test="adminOrgId != null" >
        adminOrgId,
      </if>
      <if test="memberId != null" >
        memberId,
      </if>
      <if test="memberType != null" >
        memberType,
      </if>
      <if test="recommendMailId != null" >
        recommendMailId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="adminOperatorId != null" >
        #{adminOperatorId,jdbcType=INTEGER},
      </if>
      <if test="adminOrgId != null" >
        #{adminOrgId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberType != null" >
        #{memberType,jdbcType=INTEGER},
      </if>
      <if test="recommendMailId != null" >
        #{recommendMailId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elearning.pojo.recommend.PersonListForRecommendTemplate" >
    update personlistforrecommendtemplate
    <set >
      <if test="adminOperatorId != null" >
        adminOperatorId = #{adminOperatorId,jdbcType=INTEGER},
      </if>
      <if test="adminOrgId != null" >
        adminOrgId = #{adminOrgId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        memberId = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberType != null" >
        memberType = #{memberType,jdbcType=INTEGER},
      </if>
      <if test="recommendMailId != null" >
        recommendMailId = #{recommendMailId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elearning.pojo.recommend.PersonListForRecommendTemplate" >
    update personlistforrecommendtemplate
    set adminOperatorId = #{adminOperatorId,jdbcType=INTEGER},
      adminOrgId = #{adminOrgId,jdbcType=INTEGER},
      memberId = #{memberId,jdbcType=INTEGER},
      memberType = #{memberType,jdbcType=INTEGER},
      recommendMailId = #{recommendMailId,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>